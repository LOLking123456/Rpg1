local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()
local Settings = {}

local UI = Material.Load({
     Title = "RPG ELEVATOR | Legend HandlesYT",
     Style = 1,
     SizeX = 350,
     SizeY = 400,
     Theme = "Mocha"
})

getgenv().cham = false
getgenv().nameESP = false
getgenv().boxESP = false


getgenv().esp_loaded = false
getgenv().Visibility = false

	
	
local main = UI.New({Title = "Main-Features"})



local SelectMob = {}
for i,v in pairs(workspace.Floor:GetDescendants()) do 
    if v:IsA("Model") and not table.find(SelectMob, v.Name) then 
        table.insert(SelectMob, v.Name)
    end
end



main.Dropdown({
    Text = "Select Mob To Farm",
    Options = SelectMob,
    Callback = function(v)
        Settings["ChosenMob"] = v 
    end
})

main.Toggle({
    Text = "Auto Farm Mob",
    Enabled = false,
    Callback = function(v)
        Settings["Autofarm"] = v 
    end
})


main.Slider({
    Text = "Distance From Mob",
    Callback = function(v)
        Settings["Distance"] = v
    end,
    Min = -20,
    Max = 20,
    Def = 5
})


		
 main.Toggle({
	Text = "(OP) Max Stats",
	Callback = function(state)
	
		    if state then
		       
	    	   game:GetService("RunService").RenderStepped:Connect(function()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "Healthbar" then
            v:Destroy()
        
        end
    end
end)
wait(1)
            _G.U = true
local loops = 0
while _G.U == true and loops < 220 do
wait()
local args = {
[1] = game:GetService("Players").LocalPlayer.Items:FindFirstChild("A Beginner's Necklace")
}
game:GetService("ReplicatedStorage").Remote.AccessoryPuEvent:FireServer(unpack(args))
loops = loops + 1
end
else
          _G.U = false
local loops = 0
while _G.U == true and loops < 220 do
wait()
local args = {
[1] = game:GetService("Players").LocalPlayer.Items:FindFirstChild("A Beginner's Necklace")
}
game:GetService("ReplicatedStorage").Remote.AccessoryPuEvent:FireServer(unpack(args))
loops = loops + 1
end
    end
		end})	
	
	
main.Button({
	Text = "FE Remove Nametag",
		Callback = function()
	   game:GetService("RunService").RenderStepped:Connect(function()
    for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v.Name == "Healthbar" then
            v:Destroy()
        
        end
    end
end)
		    
		end})

main.Slider({
	Text = "Mob Hitbox",
	Callback = function(s)
  for i, v in pairs(game.Workspace.Floor:GetDescendants()) do
            if v.Name == "HumanoidRootPart" then

                v.Size = Vector3.new((s),(s),(s))
                v.Transparency = 0.8
                 v.Material = "Neon"
             v.BrickColor = BrickColor.new("Really red")
                v.CanCollide = false
        end
    end
	end,
	Min = 2,
	Max = 100,
	Def = 2
})


	main.Button({
	Text = "CFrame Speed (Z)",
		Callback = function()
        repeat
		wait()
	until game:IsLoaded()
	local L_134_ = game:service('Players')
	local L_135_ = L_134_.LocalPlayer
	repeat
		wait()
	until L_135_.Character
	local L_136_ = game:service('UserInputService')
	local L_137_ = game:service('RunService')
	getgenv().Multiplier = 0.5
	local L_138_ = true
	local L_139_
	L_136_.InputBegan:connect(function(L_140_arg0)
		if L_140_arg0.KeyCode == Enum.KeyCode.LeftBracket then
			Multiplier = Multiplier + 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.LeftBracket) do
				wait()
				Multiplier = Multiplier + 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.RightBracket then
			Multiplier = Multiplier - 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.RightBracket) do
				wait()
				Multiplier = Multiplier - 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.Z then
			L_138_ = not L_138_
			if L_138_ == true then
				repeat
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
					game:GetService("RunService").Stepped:wait()
				until L_138_ == false
			end
		end
	end)
        end})
main.Slider({
	Text = "CFrame Speed",
	Callback = function(s)
 
 getgenv().Multiplier = s
	end,
	Min = 0,
	Max = 5,
	Def = 0
})




 main.Toggle({
	Text = "Infinite Jump",
	Callback = function(state)
 if state then
_G.infinjump = true
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
if _G.infinjump then
if k:byte() == 32 then
Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
Humanoid:ChangeState("Jumping")
wait(0.1)
Humanoid:ChangeState("Seated")
end
end
end)
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
    else
if _G.infinjump == true then
_G.infinjump = false
else
_G.infinjump = true
end
end
            
	end,
	Enabled = false
})





local q = UI.New({
    Title = "Esp-Features"
})
 q.Toggle({
	Text = "Visual",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().Visibility = Value
            
	end,
	Enabled = false
})


 q.Toggle({
	Text = "Box ESP",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().boxESP = Value
		end,
	Enabled = false
})
 

 q.Toggle({
	Text = "Name ESP",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().nameESP = Value
		end,
	Enabled = false
})


q.Toggle({
	Text = "Chams",
	Callback = function(Value)
   if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().cham = Value
		end,
	Enabled = false
})

-- // Credits \\ --
local cred = UI.New({
    Title = "Credits"
})

local creators = {
    "YT: Legend Handles",
}

for i,v in pairs(creators) do 
    cred.Button({
        Text = v,
        Callback = function()
            setclipboard(v) 
        end;
    });
end;



spawn(function()
    while wait() do 
        if Settings.Autofarm then 
            pcall(function()
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") then 
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Combat")) 
                end
                
                for i,v in pairs(workspace.Characters.Players:GetChildren()) do
                    if v:IsA("Model") and v.Name == Settings.ChosenMob then 
                        repeat wait() 
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,Settings.Height,Settings.Distance)

local args = {
    [1] = "Core",
    [2] = "M1",
    [3] = {}
}

game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))

until not Settings.Autofarm or v:FindFirstChild("Humanoid").Health <= 0
                    end
                end
            end)
        end
    end
end)


spawn(function()
    while wait() do 
        if Settings.Autofarm then 
            pcall(function()
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") then 
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Combat")) 
                end
                
                        for i,v in pairs(workspace.Floor:GetDescendants()) do
                    if v:IsA("Part") or v:IsA("MeshPart") and v.Name == Settings.HumanoidRootPartChosenMob then 
                        repeat wait() 
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,0,Settings.Distance)

until not Settings.Autofarm or v:FindFirstChild("Humanoid").Health <= 0
                    end
                end
            end)
        end
    end
end)
